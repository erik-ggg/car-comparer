---
---

<section
  id="scrapper-section"
  class="flex flex-row border border-gray-900 rounded-lg px-8 py-10 bg-gradient-to-r from-black to-blue-950"
>
  <div
    id="scrapper-url"
    class="w-1/3 p-3 mr-4 border rounded-lg border-violet-800"
  >
    <h2 class="text-white">Car Scrapper</h2>
    <form id="urlForm" class="w-full">
      <div class="py-2 flex">
        <input
          class="flex-1 border rounded-lg py-3 px-3 mt-4 bg-slate-900 border-blue-600 placeholder-white-500 text-white"
          type="text"
          placeholder="https://www.km77.com/"
          aria-label="Full name"
          id="url"
        />
        <button
          class="border border-blue-600 bg-blue-900 active:bg-blue-500 text-white rounded-lg py-3 px-3 mx-4 mt-4 font-semibold"
          type="submit"
        >
          Scrap!
        </button>
      </div>
    </form>
  </div>
  <form
    id="scrapper-result"
    method="POST"
    class="p-3 w-full border rounded-lg border-violet-800"
  >
    <h2 class="text-white">Sweet data :)</h2>
    <div id="car-name-section" class="flex flex-wrap items-center mt-4">
      <label class="text-white mr-3">Name:</label>
      <input
        class="flex-1 border rounded-lg py-3 px-3 mr-5 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-name"
        name="name"
        disabled
      />
      <label class="text-white px-3">Price:</label>
      <input
        class="border rounded-lg py-3 px-3 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-price"
        name="price"
        disabled
      />
    </div>
    <div id="car-hp-section">
      <label class="text-white mr-3">HP/CV:</label>
      <input
        class="border rounded-lg py-3 px-3 mt-4 mr-5 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-hp"
        name="hp"
        disabled
      />
      <label class="text-white px-3">Acceleration:</label>
      <input
        class="border rounded-lg py-3 px-3 mt-4 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-accel"
        name="accel"
        disabled
      />
    </div>
    <div id="car-size">
      <label class="text-white mr-3">Length:</label>
      <input
        class="border rounded-lg py-3 px-3 mt-4 mr-5 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-length"
        name="length"
        disabled
      />
      <label class="text-white px-3">Weight:</label>
      <input
        class="border rounded-lg py-3 px-3 mt-4 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-weight"
        name="weight"
        disabled
      />
    </div>
    <div id="car-trunk">
      <label class="text-white mr-3">Trunk with no seats:</label>
      <input
        class="border rounded-lg py-3 px-3 mt-4 mr-5 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-trunk-no-seat"
        name="trunk_space_no_seats"
        disabled
      />
      <label class="text-white px-3">Trunk with seats:</label>
      <input
        class="border rounded-lg py-3 px-3 mt-4 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="car-trunk-seat"
        name="trunk_space_seats"
        disabled
      />
      <label class="text-white px-3">Fuel tank:</label>
      <input
        class="border rounded-lg py-3 px-3 mt-4 w-1/6 bg-slate-800 border-blue-600 placeholder-white-500 text-white"
        type="text"
        id="fuel_tank"
        name="fuel_tank"
        disabled
      />
    </div>
    <div class="flex justify-end">
      <button
        class="border border-blue-600 bg-blue-900 active:bg-blue-500 text-white rounded-lg py-3 px-5 mt-4 font-semibold"
        type="submit"
      >
        Save
      </button>
    </div>
  </form>
</section>

<script>
  import axios from "axios";
  import * as cheerio from "cheerio";
  import type { CarScrappedData } from "../../types/types";

  let carScrapped: CarScrappedData;

  const scrapperResultForm = document.getElementById("scrapper-result");
  scrapperResultForm?.addEventListener("submit", async (e) => {
    e.preventDefault();
    try {
      const response = await fetch("/api/car", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(carScrapped),
      });

      const result = await response.json();

      if (result.success) {
        console.log("Data saved successfully!");
      } else {
        console.error("Failed to save data:", result.error);
      }
    } catch (error) {
      console.error("Error sending data to server:", error);
    }
  });

  const form = document.getElementById("urlForm");
  form?.addEventListener("submit", async (e) => {
    // Get the HTML

    e.preventDefault();
    const urlInput = document.getElementById("url") as HTMLInputElement;
    console.log("Submitted URL:", urlInput.value);
    const url = urlInput.value;

    const response = await axios.get(url);

    // Scrap the HTML
    const $ = cheerio.load(response.data);

    // Extract the car name
    const carName = $("h1")
      .contents()
      .filter(function () {
        return this.type === "text";
      })
      .text()
      .trim();

    // Extract the price text, ensuring duplicates are removed
    const rawText = $(".js-price.js-price-total")
      .contents() // Get all child nodes
      .filter(function () {
        return this.type === "text"; // Include only text nodes
      })
      .map((_, node) => $(node).text().trim()) // Trim each text node
      .toArray(); // Convert to an array

    // Remove duplicates from the array and join into a single string
    const uniqueText = [...new Set(rawText)].join(" ");

    const potenciaMaxima = $("table.js-relocation-destination")
      .find('th:contains("Potencia máxima")')
      .next("td")
      .contents()
      .map((_, node) => $(node).text().trim())
      .toArray()[1];

    const accel = $("table.js-relocation-destination")
      .find('th:contains("Aceleración 0-100 km/h")')
      .next("td")
      .contents()
      .text()
      .trim();

    const car_length = $("table.js-relocation-destination")
      .find('th:contains("Longitud")')
      .next("td")
      .contents()
      .text()
      .trim();

    const car_weight = $("table.js-relocation-destination")
      .find('th:contains("Peso")')
      .next("td")
      .contents()
      .text()
      .trim();

    // Trunk size
    const trunk_seats = $("table.js-relocation-destination")
      .find('td:contains("Volumen con una fila de asientos disponible")')
      .next("td")
      .contents()
      .text()
      .trim();

    const trunk_no_seats = $("table.js-relocation-destination")
      .find(
        'td:contains("Volumen mínimo con dos filas de asientos disponibles")'
      )
      .next("td")
      .contents()
      .text()
      .trim();

    const fuel_tank_scrapped = $("table.js-relocation-destination")
      .find('td:contains("Gasolina")')
      .next("td")
      .contents()
      .text()
      .trim();

    // Return the cleaned-up price text
    const result: CarScrappedData = {
      name: carName || "No encontrado",
      price: uniqueText || "No encontrado",
      hp: potenciaMaxima || "No encontrado",
      accel: accel || "No encontrado",
      length: car_length || "No encontrado",
      weight: car_weight || "No encontrado",
      trunk_space_seats: trunk_seats || "No encontrado",
      trunk_space_no_seats: trunk_no_seats || "No encontrado",
      fuel_tank: fuel_tank_scrapped || "No encontrado",
      url: (document.getElementById("url") as HTMLInputElement).value,
    };

    carScrapped = result;

    (document.getElementById("car-name") as HTMLInputElement).value =
      result.name;
    (document.getElementById("car-price") as HTMLInputElement).value =
      result.price;
    (document.getElementById("car-hp") as HTMLInputElement).value = result.hp;
    (document.getElementById("car-accel") as HTMLInputElement).value =
      result.accel;
    (document.getElementById("car-length") as HTMLInputElement).value =
      result.length;
    (document.getElementById("car-weight") as HTMLInputElement).value =
      result.weight;
    (document.getElementById("car-trunk-seat") as HTMLInputElement).value =
      result.trunk_space_seats;
    (document.getElementById("car-trunk-no-seat") as HTMLInputElement).value =
      result.trunk_space_no_seats;
    (document.getElementById("fuel_tank") as HTMLInputElement).value =
      result.fuel_tank;

    console.log("Result:", result);
  });
</script>
